// Code generated by protoc-gen-go.
// source: proto/user.proto
// DO NOT EDIT!

/*
Package user is a generated protocol buffer package.

It is generated from these files:
	proto/user.proto

It has these top-level messages:
	GetUserDetailRequest
	BasicUserInfo
	GetUserDetailResponse
	SetUserDetailRequest
	EmptyResponse
	AddTokenRequest
	CreateUserRequest
*/
package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetUserDetailRequest struct {
	UserID string `protobuf:"bytes,1,opt,name=UserID,json=userID" json:"UserID,omitempty"`
	// this token here is not as much for security (you could just create a new one) but for safety, protection against bugs in code
	AccessToken string `protobuf:"bytes,2,opt,name=AccessToken,json=accessToken" json:"AccessToken,omitempty"`
}

func (m *GetUserDetailRequest) Reset()                    { *m = GetUserDetailRequest{} }
func (m *GetUserDetailRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserDetailRequest) ProtoMessage()               {}
func (*GetUserDetailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetUserDetailRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetUserDetailRequest) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type BasicUserInfo struct {
	FirstName string `protobuf:"bytes,1,opt,name=FirstName,json=firstName" json:"FirstName,omitempty"`
	LastName  string `protobuf:"bytes,2,opt,name=LastName,json=lastName" json:"LastName,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=Email,json=email" json:"Email,omitempty"`
}

func (m *BasicUserInfo) Reset()                    { *m = BasicUserInfo{} }
func (m *BasicUserInfo) String() string            { return proto.CompactTextString(m) }
func (*BasicUserInfo) ProtoMessage()               {}
func (*BasicUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BasicUserInfo) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *BasicUserInfo) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *BasicUserInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type GetUserDetailResponse struct {
	UserID       string         `protobuf:"bytes,1,opt,name=UserID,json=userID" json:"UserID,omitempty"`
	UserInfo     *BasicUserInfo `protobuf:"bytes,2,opt,name=UserInfo,json=userInfo" json:"UserInfo,omitempty"`
	AccessTokens []string       `protobuf:"bytes,3,rep,name=AccessTokens,json=accessTokens" json:"AccessTokens,omitempty"`
}

func (m *GetUserDetailResponse) Reset()                    { *m = GetUserDetailResponse{} }
func (m *GetUserDetailResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserDetailResponse) ProtoMessage()               {}
func (*GetUserDetailResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetUserDetailResponse) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetUserDetailResponse) GetUserInfo() *BasicUserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *GetUserDetailResponse) GetAccessTokens() []string {
	if m != nil {
		return m.AccessTokens
	}
	return nil
}

type SetUserDetailRequest struct {
	Updates []*SetUserDetailRequest_UpdateField `protobuf:"bytes,1,rep,name=Updates,json=updates" json:"Updates,omitempty"`
}

func (m *SetUserDetailRequest) Reset()                    { *m = SetUserDetailRequest{} }
func (m *SetUserDetailRequest) String() string            { return proto.CompactTextString(m) }
func (*SetUserDetailRequest) ProtoMessage()               {}
func (*SetUserDetailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SetUserDetailRequest) GetUpdates() []*SetUserDetailRequest_UpdateField {
	if m != nil {
		return m.Updates
	}
	return nil
}

type SetUserDetailRequest_UpdateField struct {
	Name  string `protobuf:"bytes,1,opt,name=Name,json=name" json:"Name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=Value,json=value" json:"Value,omitempty"`
}

func (m *SetUserDetailRequest_UpdateField) Reset()         { *m = SetUserDetailRequest_UpdateField{} }
func (m *SetUserDetailRequest_UpdateField) String() string { return proto.CompactTextString(m) }
func (*SetUserDetailRequest_UpdateField) ProtoMessage()    {}
func (*SetUserDetailRequest_UpdateField) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0}
}

func (m *SetUserDetailRequest_UpdateField) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SetUserDetailRequest_UpdateField) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type EmptyResponse struct {
}

func (m *EmptyResponse) Reset()                    { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string            { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()               {}
func (*EmptyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type AddTokenRequest struct {
	UserID          string `protobuf:"bytes,1,opt,name=UserID,json=userID" json:"UserID,omitempty"`
	ValidForSeconds uint64 `protobuf:"varint,2,opt,name=ValidForSeconds,json=validForSeconds" json:"ValidForSeconds,omitempty"`
	Token           string `protobuf:"bytes,3,opt,name=Token,json=token" json:"Token,omitempty"`
}

func (m *AddTokenRequest) Reset()                    { *m = AddTokenRequest{} }
func (m *AddTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*AddTokenRequest) ProtoMessage()               {}
func (*AddTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AddTokenRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *AddTokenRequest) GetValidForSeconds() uint64 {
	if m != nil {
		return m.ValidForSeconds
	}
	return 0
}

func (m *AddTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type CreateUserRequest struct {
	UserInfo *BasicUserInfo `protobuf:"bytes,1,opt,name=UserInfo,json=userInfo" json:"UserInfo,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreateUserRequest) GetUserInfo() *BasicUserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*GetUserDetailRequest)(nil), "user.GetUserDetailRequest")
	proto.RegisterType((*BasicUserInfo)(nil), "user.BasicUserInfo")
	proto.RegisterType((*GetUserDetailResponse)(nil), "user.GetUserDetailResponse")
	proto.RegisterType((*SetUserDetailRequest)(nil), "user.SetUserDetailRequest")
	proto.RegisterType((*SetUserDetailRequest_UpdateField)(nil), "user.SetUserDetailRequest.UpdateField")
	proto.RegisterType((*EmptyResponse)(nil), "user.EmptyResponse")
	proto.RegisterType((*AddTokenRequest)(nil), "user.AddTokenRequest")
	proto.RegisterType((*CreateUserRequest)(nil), "user.CreateUserRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserAttributeService service

type UserAttributeServiceClient interface {
	// Gets details about a user, e.g. "Firstname" or so (but not passwords! - see auth package)
	GetUserDetail(ctx context.Context, in *GetUserDetailRequest, opts ...grpc.CallOption) (*GetUserDetailResponse, error)
	SetUserDetail(ctx context.Context, in *SetUserDetailRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*GetUserDetailResponse, error)
	AddUserToken(ctx context.Context, in *AddTokenRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type userAttributeServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserAttributeServiceClient(cc *grpc.ClientConn) UserAttributeServiceClient {
	return &userAttributeServiceClient{cc}
}

func (c *userAttributeServiceClient) GetUserDetail(ctx context.Context, in *GetUserDetailRequest, opts ...grpc.CallOption) (*GetUserDetailResponse, error) {
	out := new(GetUserDetailResponse)
	err := grpc.Invoke(ctx, "/user.UserAttributeService/GetUserDetail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAttributeServiceClient) SetUserDetail(ctx context.Context, in *SetUserDetailRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := grpc.Invoke(ctx, "/user.UserAttributeService/SetUserDetail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAttributeServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*GetUserDetailResponse, error) {
	out := new(GetUserDetailResponse)
	err := grpc.Invoke(ctx, "/user.UserAttributeService/CreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAttributeServiceClient) AddUserToken(ctx context.Context, in *AddTokenRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := grpc.Invoke(ctx, "/user.UserAttributeService/AddUserToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserAttributeService service

type UserAttributeServiceServer interface {
	// Gets details about a user, e.g. "Firstname" or so (but not passwords! - see auth package)
	GetUserDetail(context.Context, *GetUserDetailRequest) (*GetUserDetailResponse, error)
	SetUserDetail(context.Context, *SetUserDetailRequest) (*EmptyResponse, error)
	CreateUser(context.Context, *CreateUserRequest) (*GetUserDetailResponse, error)
	AddUserToken(context.Context, *AddTokenRequest) (*EmptyResponse, error)
}

func RegisterUserAttributeServiceServer(s *grpc.Server, srv UserAttributeServiceServer) {
	s.RegisterService(&_UserAttributeService_serviceDesc, srv)
}

func _UserAttributeService_GetUserDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAttributeServiceServer).GetUserDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserAttributeService/GetUserDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAttributeServiceServer).GetUserDetail(ctx, req.(*GetUserDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAttributeService_SetUserDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAttributeServiceServer).SetUserDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserAttributeService/SetUserDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAttributeServiceServer).SetUserDetail(ctx, req.(*SetUserDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAttributeService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAttributeServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserAttributeService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAttributeServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAttributeService_AddUserToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAttributeServiceServer).AddUserToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserAttributeService/AddUserToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAttributeServiceServer).AddUserToken(ctx, req.(*AddTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserAttributeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.UserAttributeService",
	HandlerType: (*UserAttributeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserDetail",
			Handler:    _UserAttributeService_GetUserDetail_Handler,
		},
		{
			MethodName: "SetUserDetail",
			Handler:    _UserAttributeService_SetUserDetail_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _UserAttributeService_CreateUser_Handler,
		},
		{
			MethodName: "AddUserToken",
			Handler:    _UserAttributeService_AddUserToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/user.proto",
}

func init() { proto.RegisterFile("proto/user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 470 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x93, 0xcf, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x97, 0xf5, 0xc7, 0xda, 0x97, 0x56, 0x05, 0xd3, 0x41, 0x14, 0x76, 0xa8, 0x72, 0x40,
	0x3d, 0xb5, 0x52, 0x39, 0x70, 0xe1, 0x40, 0x47, 0x57, 0x04, 0x42, 0x08, 0xa5, 0x6c, 0x57, 0xe4,
	0x25, 0x6f, 0x93, 0x45, 0x6a, 0x07, 0xdb, 0xa9, 0xc4, 0x9d, 0x7f, 0x80, 0x7f, 0x83, 0xbf, 0x12,
	0xd9, 0x4e, 0xb4, 0x74, 0x64, 0xea, 0x6e, 0x7e, 0x3f, 0xfc, 0xde, 0xd7, 0x9f, 0x6f, 0x02, 0x4f,
	0x72, 0x29, 0xb4, 0x98, 0x17, 0x0a, 0xe5, 0xcc, 0x1e, 0x49, 0xdb, 0x9c, 0xc3, 0xb3, 0x5b, 0x21,
	0x6e, 0x33, 0x9c, 0xd3, 0x9c, 0xcd, 0x29, 0xe7, 0x42, 0x53, 0xcd, 0x04, 0x57, 0xae, 0x27, 0xfa,
	0x0a, 0xe3, 0x0f, 0xa8, 0x2f, 0x15, 0xca, 0x15, 0x6a, 0xca, 0xb2, 0x18, 0x7f, 0x16, 0xa8, 0x34,
	0x79, 0x0e, 0x5d, 0x93, 0xfc, 0xb8, 0x0a, 0xbc, 0x89, 0x37, 0xed, 0xc7, 0xdd, 0xc2, 0x46, 0x64,
	0x02, 0xfe, 0x32, 0x49, 0x50, 0xa9, 0x6f, 0xe2, 0x07, 0xf2, 0xe0, 0xd8, 0x16, 0x7d, 0x7a, 0x97,
	0x8a, 0xbe, 0xc3, 0xf0, 0x9c, 0x2a, 0x96, 0xd8, 0xeb, 0xfc, 0x46, 0x90, 0x33, 0xe8, 0xaf, 0x99,
	0x54, 0xfa, 0x0b, 0xdd, 0x62, 0x39, 0xad, 0x7f, 0x53, 0x25, 0x48, 0x08, 0xbd, 0xcf, 0xb4, 0x2c,
	0xba, 0x69, 0xbd, 0xac, 0x8c, 0xc9, 0x18, 0x3a, 0x17, 0x5b, 0xca, 0xb2, 0xa0, 0x65, 0x0b, 0x1d,
	0x34, 0x41, 0xf4, 0xdb, 0x83, 0xd3, 0x7b, 0x9a, 0x55, 0x2e, 0xb8, 0xc2, 0x07, 0x45, 0xcf, 0xa1,
	0x57, 0xa9, 0xb1, 0x3b, 0xfc, 0xc5, 0xb3, 0x99, 0xe5, 0xb4, 0x27, 0x34, 0xee, 0x15, 0x95, 0xe4,
	0x08, 0x06, 0xb5, 0x57, 0xaa, 0xa0, 0x35, 0x69, 0x4d, 0xfb, 0xf1, 0xa0, 0xf6, 0x4c, 0x15, 0xfd,
	0xf1, 0x60, 0xbc, 0x69, 0x42, 0xf7, 0x0e, 0x4e, 0x2e, 0xf3, 0x94, 0x6a, 0x54, 0x81, 0x37, 0x69,
	0x4d, 0xfd, 0xc5, 0x2b, 0xb7, 0xac, 0xa9, 0x79, 0xe6, 0x3a, 0xd7, 0x0c, 0xb3, 0x34, 0x3e, 0x29,
	0xdc, 0xb5, 0xf0, 0x0d, 0xf8, 0xb5, 0x3c, 0x21, 0xd0, 0xae, 0xb1, 0x6b, 0xf3, 0x12, 0xcd, 0x15,
	0xcd, 0x8a, 0x8a, 0x59, 0x67, 0x67, 0x82, 0x68, 0x04, 0xc3, 0x8b, 0x6d, 0xae, 0x7f, 0x55, 0x44,
	0x22, 0x06, 0xa3, 0x65, 0x9a, 0x5a, 0xc5, 0x87, 0x9c, 0x9d, 0xc2, 0xe8, 0x8a, 0x66, 0x2c, 0x5d,
	0x0b, 0xb9, 0xc1, 0x44, 0xf0, 0x54, 0xd9, 0xd9, 0xed, 0x78, 0xb4, 0xdb, 0x4f, 0x9b, 0xdd, 0xce,
	0xfd, 0xd2, 0x16, 0x6d, 0x7d, 0x5f, 0xc1, 0xd3, 0xf7, 0x12, 0xa9, 0x46, 0x33, 0xbd, 0x5a, 0x56,
	0x27, 0xef, 0x3d, 0x82, 0xfc, 0xe2, 0xef, 0x31, 0x8c, 0x4d, 0x7a, 0xa9, 0xb5, 0x64, 0xd7, 0x85,
	0xc6, 0x0d, 0xca, 0x1d, 0x4b, 0x90, 0x7c, 0x82, 0xe1, 0x9e, 0xe9, 0x24, 0x74, 0x83, 0x9a, 0xbe,
	0xde, 0xf0, 0x65, 0x63, 0xad, 0x64, 0x72, 0x44, 0xce, 0x61, 0xb8, 0x69, 0x9a, 0xd5, 0xe4, 0x50,
	0x58, 0x0a, 0xde, 0xe7, 0x7a, 0x44, 0x56, 0x00, 0x77, 0xcf, 0x25, 0x2f, 0x5c, 0xd3, 0x7f, 0x00,
	0x0e, 0x29, 0x79, 0x0b, 0x83, 0x65, 0x9a, 0x9a, 0x92, 0x25, 0x4a, 0x4e, 0x5d, 0xfb, 0x3d, 0xcf,
	0x1e, 0xd0, 0x70, 0xdd, 0xb5, 0xff, 0xf0, 0xeb, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1d, 0xcb,
	0xe9, 0x7e, 0xfb, 0x03, 0x00, 0x00,
}
